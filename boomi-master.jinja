# Import templates
{% import "customnetwork-template.jinja" as customnetwork with context %}
{% import "subnetwork-template.jinja" as subnetwork with context  %}
{% import "firewall-template.jinja" as firewall with context  %}
{% import "route-template.jinja" as route with context  %}
{% import "cloud-nat-template.jinja" as cloudnat with context  %}

{% set NAME_PREFIX = env["deployment"] %}
{% set REGION = properties["region"] %}
{% set VPC_NAME = NAME_PREFIX + '-network' %}
{% set PUBLIC_SUBNET =  'public-subnet-' + REGION %}
{% set PRIVATE_SUBNET = 'private-subnet-' + REGION  %}


resources:
# GCP Custom Network
- name: {{ VPC_NAME }}
  type: customnetwork-template.jinja

# GCP Subnets (us-central, canada, uk and mumbai)
- name: {{ NAME_PREFIX + '-subnet' }}
  type: subnetwork-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    subnets:
    - name: {{ PUBLIC_SUBNET }}
      ipCidrRange: 10.130.0.0/20
      region: {{ REGION }}
    - name: {{ PRIVATE_SUBNET }}
      ipCidrRange: 10.130.16.0/20
      region: {{ REGION }}

# GCP Firewall Rules
- name: {{ NAME_PREFIX + '-firewall-allow-bastion' }}
  type: firewall-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    IPProtocol: TCP
    Port: [22, 3389]
    targetTags: bastion-machine

- name: {{ NAME_PREFIX + '-firewall-allow-http-https' }}
  type: firewall-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    IPProtocol: TCP
    Port: [80, 443]

- name: {{ NAME_PREFIX + '-firewall-allow-icmp' }}
  type: firewall-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    IPProtocol: ICMP
    Port: []

- name: {{ NAME_PREFIX + '-cloud-router' }}
  type: route-template.jinja
  properties:
    use_custom_network: true
    network: $(ref.{{ VPC_NAME }}.selfLink)
    subnets: 
    - region: {{ REGION }}
      subnet: $(ref.{{ PRIVATE_SUBNET }}.selfLink)

- name: {{ NAME_PREFIX + '-cloud-nat' }}
  type: cloud-nat-template.jinja
  properties:
    use_custom_network: true
    network: $(ref.{{ VPC_NAME }}.selfLink)