{% set NAME_PREFIX = env["deployment"] %}
{% set REGION = properties["region"] %}
{% set ZONE_ONE = properties["zone_1"] %}
{% set VPC_NAME = NAME_PREFIX + '-network' %}
{% set PUBLIC_SUBNET =  NAME_PREFIX + '-public-subnet-' + REGION %}
{% set PRIVATE_SUBNET = NAME_PREFIX + '-private-subnet-' + REGION  %}

resources:
# GCP Custom Network
- name: {{ VPC_NAME }}
  type: customnetwork-template.jinja

# GCP Subnets (us-central, canada, uk and mumbai)
- name: {{ NAME_PREFIX + '-subnet' }}
  type: subnetwork-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    subnets:
    - name: {{ PUBLIC_SUBNET }}
      ipCidrRange: {{ properties["publicSubnetCidrRange"] }}
      region: {{ REGION }}
    - name: {{ PRIVATE_SUBNET }}
      ipCidrRange: {{ properties["privateSubnetCidrRange"] }}
      region: {{ REGION }}

# GCP Firewall Rules
- name: {{ NAME_PREFIX + '-firewall-allow-bastion' }}
  type: firewall-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    IPProtocol: TCP
    Port: [22, 3389]
    targetTags: bastion-machine

- name: {{ NAME_PREFIX + '-firewall-allow-http-https' }}
  type: firewall-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    IPProtocol: TCP
    Port: [80, 443]

- name: {{ NAME_PREFIX + '-firewall-allow-icmp' }}
  type: firewall-template.jinja
  properties:
    network: $(ref.{{ VPC_NAME }}.selfLink)
    IPProtocol: ICMP
    Port: []

- name: {{ NAME_PREFIX + '-cloud-router' }}
  type: route-template.jinja
  properties:
    use_custom_network: true
    network: $(ref.{{ VPC_NAME }}.selfLink)
    subnets: 
    - region: {{ REGION }}
      subnet: $(ref.{{ PRIVATE_SUBNET }}.selfLink)

- name: {{ NAME_PREFIX + '-cloud-nat' }}
  type: cloud-nat-template.jinja
  properties:
    use_custom_network: true
    network: $(ref.{{ VPC_NAME }}.selfLink)

# GCP Kubernetes Engine
- name: {{ NAME_PREFIX + '-gke-cluster' }}
  type: gke-cluster-template1.jinja
  properties:
    region: {{ REGION }}
    zone: {{ ZONE_ONE }}
    network: $(ref.{{ VPC_NAME }}.selfLink)
    subnetwork: $(ref.{{ PRIVATE_SUBNET }}.selfLink)

     # Set this to v1beta1 to use beta features such as private clusters
    gkeApiVersion: {{ properties["gkeApiVersion"] }}
    pool-version: v1

    # Whether to deploy the new Stackdriver Kubernetes agents
    stackdriver-kubernetes: false
    
    desiredNodeCount: {{ properties["desiredNodeCount"] }}
    minNodeCount: {{ properties["minNodeCount"] }}
    maxNodeCount: {{ properties["maxNodeCount"] }}

    gkeMachineType: {{ properties["gkeMachineType"] }}
    
    securityConfig:
      privatecluster: {{ properties["privatecluster"] }}
      masterIpv4CidrBlock: 172.16.0.16/28
      secureNodeMetadata: true
      podSecurityPolicy: true
      masterAuthorizedNetworksConfig:
        cidrBlocks:
        - cidrBlock: 1.2.3.4/32
        - cidrBlock: 5.6.7.8/32
        enabled: true

# GCP Managed Instance Group
- name: {{ NAME_PREFIX + '-bastion-instance' }}
  type: instance_group_manager.jinja
  properties:
    region: {{ REGION }}
    zone: {{ ZONE_ONE }}
    network: $(ref.{{ VPC_NAME }}.selfLink)
    subnetwork: $(ref.{{ PUBLIC_SUBNET }}.selfLink)
    machineType: {{ properties["bastionMachineType"] }}
    machineImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/centos-7
    targetSize: 1
    diskSizeGB: 30
    externalIP: True
    tags: bastion-machine
